// <auto-generated />
using System;
using FilmKatalogusAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FilmKatalogusAPI.Migrations
{
    [DbContext(typeof(FilmContext))]
    [Migration("20220315184531_FilmMufaj")]
    partial class FilmMufaj
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("FilmKatalogusAPI.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("BemutatoDatum")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Cim")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("FilmMufajId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmMufajId");

                    b.ToTable("Filmek");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BemutatoDatum = new DateTime(1994, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Cim = "Forrest Gump",
                            FilmMufajId = 1
                        });
                });

            modelBuilder.Entity("FilmKatalogusAPI.Models.FilmMufaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Korhatar")
                        .HasColumnType("int");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("FilmMufajok");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Korhatar = 12,
                            Nev = "Dráma"
                        });
                });

            modelBuilder.Entity("FilmKatalogusAPI.Models.Szinesz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Keresztnev")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nemzetiseg")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("OscarNyertes")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("SzuletesiDatum")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Vezeteknev")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Szineszek");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Keresztnev = "Tom",
                            Nemzetiseg = "USA",
                            OscarNyertes = true,
                            SzuletesiDatum = new DateTime(1956, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vezeteknev = "Hanks"
                        });
                });

            modelBuilder.Entity("FilmKatalogusAPI.Models.Film", b =>
                {
                    b.HasOne("FilmKatalogusAPI.Models.FilmMufaj", "FilmMufaj")
                        .WithMany("Filmek")
                        .HasForeignKey("FilmMufajId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilmMufaj");
                });

            modelBuilder.Entity("FilmKatalogusAPI.Models.FilmMufaj", b =>
                {
                    b.Navigation("Filmek");
                });
#pragma warning restore 612, 618
        }
    }
}
